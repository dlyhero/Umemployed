name: Build and Deploy Celery Worker to Docker Hub

on:
  push:
    branches: [ main, master ]
    paths:
      - 'resume/tasks.py'
      - 'resume/models.py'
      - 'job/tasks.py'
      - 'users/tasks.py'
      - 'messaging/tasks.py'
      - 'Dockerfile.celery'
      - 'requirements.txt'
      - 'umemployed/celery.py'
      - 'umemployed/settings.py'
  workflow_dispatch: # Allow manual trigger

env:
  DOCKER_HUB_REPO: umemployed/um_celery_worker
  
jobs:
  build-and-push-celery:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_CELERY_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_CELERY_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_HUB_REPO }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Celery worker
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.celery
        push: true
        tags: |
          ${{ env.DOCKER_HUB_REPO }}:latest
          ${{ env.DOCKER_HUB_REPO }}:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deployment Summary
      run: |
        echo "üöÄ Celery Worker Deployment Complete!"
        echo "‚úÖ Image pushed to: ${{ env.DOCKER_HUB_REPO }}:latest"
        echo "‚úÖ Tagged with commit: ${{ env.DOCKER_HUB_REPO }}:${{ github.sha }}"
        echo "üìù Commit SHA: ${{ github.sha }}"
        echo ""
        echo "üîÑ To deploy the updated worker to Azure Container Instances:"
        echo "1. Option 1 - Azure Portal:"
        echo "   ‚Ä¢ Go to Azure Portal ‚Üí Container Instances"
        echo "   ‚Ä¢ Find your Celery worker container"
        echo "   ‚Ä¢ Stop and delete the container"
        echo "   ‚Ä¢ Create new container with image: ${{ env.DOCKER_HUB_REPO }}:latest"
        echo ""
        echo "2. Option 2 - Azure CLI (recommended):"
        echo "   az container restart --resource-group <your-resource-group> --name <celery-container-name>"
        echo ""
        echo "3. Option 3 - Update container image:"
        echo "   az container update --resource-group <your-resource-group> --name <celery-container-name> --image ${{ env.DOCKER_HUB_REPO }}:latest"
